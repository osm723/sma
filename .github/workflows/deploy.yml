name: Deploy To EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Render application.yml
        run: echo "${{ secrets.APPLICATION_PROPERTIES }}" > src/main/resources/application.yml

      - name: Build & pack Docker image
        run: |
          ./gradlew clean build
          docker build -t myapp:${{ github.sha }} .

      - name: Save Docker image as tar
        run: docker save myapp:${{ github.sha }} -o myapp_${{ github.sha }}.tar

      - name: Copy image & compose to WAS1
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: |
            myapp_${{ github.sha }}.tar
            docker-compose.yml
          target: /home/ubuntu/sma/deploy

      - name: Deploy on WAS1
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            cd /home/ubuntu/sma/deploy
            # Load new image, stop old, start new
            docker load -i myapp_${{ github.sha }}.tar
            docker-compose down
            IMAGE_TAG=myapp:${{ github.sha }}
            docker-compose up -d

      - name: Copy image & compose to WAS2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST_2 }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: |
            myapp_${{ github.sha }}.tar
            docker-compose.yml
          target: /home/ubuntu/sma/deploy

      - name: Deploy on WAS2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST_2 }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            cd /home/ubuntu/sma/deploy
            docker load -i myapp_${{ github.sha }}.tar
            docker-compose down
            IMAGE_TAG=myapp:${{ github.sha }}
            docker-compose up -d
